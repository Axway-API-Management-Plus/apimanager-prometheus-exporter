global:
  repository: "cwiechmann"
  image: "apibuilder4prometheus"
  # You may override the default image tag
  imageTag: ""
  pullPolicy: IfNotPresent

  replicas: 1

config: 
  # Information used to connect to the Admin-Node-Manager
  anm: 
    # The ANM-URL (e.g. https://anm.customer.com:8090)
    url: ""
    # Username used by the process to collect metric information. Must have permission to call the REST-API: api/monitoring/metrics/...
    username: ""
    # Belonging password. You may also use an existing secret that contains the password. See below.
    password: ""
    # If an existing secret is provided the config.anm.password is ignored and instead this secret is used
    existingSecret: ""
    # The key in the existing secret that contains the required password
    existingSecretPasswordKey: ""

  # Controls how often the service metrics, such as API request information or processing times should be obtained from the ANM. 
  # The smaller the interval, the more granular the exposed information is provided, but has higher load for the admin node manager.
  # The default is every 15 seconds. It makes sense to match this value with the Prometheus scraper interval.
  pollServiceMetricsInterval: ""
  # Controls how often the API gateway system metrics, such as CPU or memory usage, should be obtained from the ANM. 
  # The smaller the interval, the more granular the exposed information is provided, but has higher load for the admin node manager.
  # The default is every 15 seconds. It makes sense to match this value with the Prometheus scraper interval.
  pollSystemMetricsInterval: ""
  # The Log-Level of the API-Builder process. Defaults to info.
  logLevel: ""


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  # If enabled, you can access the metrics via this ingress resource (on OpenShift a route is created instead)
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /*
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
